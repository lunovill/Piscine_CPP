#include "Brain.hpp"

/********************************************************************************/
/* ------------------------------- CONSTRUCTOR -------------------------------- */
/********************************************************************************/

Brain::Brain(void) {
	std::cout << ansi((short[]){BOLD, GREEN}, 2) + "Default constructor called for " + __func__ + "." << std::endl;
	return ;
}

Brain::Brain(Brain &copy) {
	std::cout << ansi((short[]){BOLD, GREEN}, 2) + "Copy constructor called for " + __func__ + "." << std::endl;
	*this = copy;
	return ;
}

/********************************************************************************/
/* -------------------------------- DESTRUCTOR -------------------------------- */
/********************************************************************************/

Brain::~Brain(void) {
	std::cout << ansi((short[]){BOLD, RED}, 2) + "Default constructor called for " + __func__ + "." << std::endl;
	return ;
}
/********************************************************************************/
/* --------------------------------- OVERLOAD --------------------------------- */
/********************************************************************************/

Brain	&Brain::operator=(const Brain &rhs) {
	if (this != &rhs)
		for (int i = 0; i < 100; i++)
			this->_ideas[i] = rhs.getIdea(i);
	return *this;
}

/********************************************************************************/
/* --------------------------------- ACCESSOR --------------------------------- */
/********************************************************************************/

std::string	Brain::getIdea(int i) const { return this->_ideas[i]; }

void		Brain::setIdea(int i, std::string idea) { this->_ideas[i] = idea; }

/********************************************************************************/
