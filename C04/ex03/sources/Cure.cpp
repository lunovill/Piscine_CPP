#include "Cure.hpp"

/********************************************************************************/
/* ------------------------------- CONSTRUCTOR -------------------------------- */
/********************************************************************************/

Cure::Cure(void) : AMateria("cure") {
	std::cout << ansi((short[]){BOLD, GREEN}, 2) + "Default constructor called for " + __func__ + "." << std::endl;
	return;
}

Cure::Cure(const Cure &copy) : AMateria(copy) {
	std::cout << ansi((short[]){BOLD, GREEN}, 2) + "Copy constructor called for " + __func__ + "." << std::endl;
	return;
}


/********************************************************************************/
/* -------------------------------- DESTRUCTOR -------------------------------- */
/********************************************************************************/

Cure::~Cure(void) {
	std::cout << ansi((short[]){BOLD, RED}, 2) + "Default constructor called for " + __func__ + "." << std::endl;
	return;
}

/********************************************************************************/
/* --------------------------------- OVERLOAD --------------------------------- */
/********************************************************************************/

Cure	&Cure::operator=(const Cure &) { return *this; }

/********************************************************************************/
/* --------------------------------- METHODS ---------------------------------- */
/********************************************************************************/

Cure	*Cure::clone(void) const { return new Cure(*this); }

void	Cure::use(ICharacter& target) {
	std::cout << ansi(NULL, 0) << "* heals " + target.getName() +  "'s wounds *" << std::endl;
	return;
}

/********************************************************************************/
